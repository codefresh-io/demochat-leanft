#yalm flow for the demo
  version: "1.0"
  steps:
    aut-build-step:
      type: "build"
      fail-fast: false
      dockerfile: "Dockerfile"
      image-name: "verchol/demochat-hpe"
      tag: "latest"

    push-aut-to-docker-hub:
      type: push
      candidate: ${{aut-build-step}}
      tag: latest
      fail-fast: false

    #run-leanft-test:
    #  fail-fast: false
    #  image: "verchol/demochat_ft:master"
    #
    # composition-step:
    #   type: composition
    #   fail-fast: false
    #   composition: docker-compose-integration.yml
    #   composition-candidates:
    #       uft:
    #         image: "razielt/demochat_ft:master"
    #         volumes:
    #             - output:/scripts/RunResults
    #         links :
    #             - web:aut
    #         depends_on :
    #             - web
        # test:
        #   image: "tutum/curl"
        #   links :
        #     - web:aut
        #   depends_on :
        #     - web
        #   command: sh -c 'sleep 1000 && curl http://aut:5000 && echo works ? '

    # export-output:
    #   image: alpine:latest
    #   working-directory: ${{initial-clone}}
    #   volumes:
    #       - output:/output
    #   commands:
    #       - cp -r . /output
    #       - echo using previous file. printing its content
    #       - ls /output

    push-to-s3:
      image: garland/aws-cli-docker:latest
      working-directory: ${{initial-clone}}
      commands:
          - ls .
          - mkdir /output
          - ls /output
          - cp ./codefresh.yml /output
          - cat /output/codefresh.yml
          - echo $AWS_ACCESS_KEY_ID $AWS_SECRET_ACCESS_KEY  $AWS_DEFAULT_REGION
          - echo using previous file. printing its content
          - ls /output
          #- aws s3 cp ./codefresh.yml s3://codefresh-demo/codefresh.yml
          - aws s3 ls s3://codefresh-demo/
      environment:
          - AWS_ACCESS_KEY_ID=${{AWS_ACCESS_KEY_ID}}
          - AWS_SECRET_ACCESS_KEY=${{AWS_SECRET_ACCESS_KEY}}
          - AWS_DEFAULT_REGION=${{AWS_DEFAULT_REGION}}
